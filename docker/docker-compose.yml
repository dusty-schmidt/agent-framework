version: '3.8'

services:
  agentic-framework:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: agentic-framework
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - MODEL_NAME=${MODEL_NAME:-openai/gpt-oss-20b}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=production
    volumes:
      # Mount data and logs for persistence
      - ../data:/app/data
      - ../logs:/app/logs
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "from scripts.simple_env import setup_simple_env; setup_simple_env(); print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: agentic-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: Add PostgreSQL for persistent storage (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: agentic-postgres
  #   environment:
  #     - POSTGRES_DB=agentic_db
  #     - POSTGRES_USER=agentic_user
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agentic_pass}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

# volumes:
#   redis_data:
#   postgres_data:
